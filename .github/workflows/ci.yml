name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: npm run lint
    
    - name: Type check
      run: npx tsc --noEmit
    
    - name: Build project
      run: npm run build
      env:
        NEXT_PUBLIC_NETWORK: testnet
        NEXT_PUBLIC_CONTRACT_ADDRESS: ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM
        NEXT_PUBLIC_CONTRACT_NAME: linkchain-tips
        NEXT_PUBLIC_APP_URL: http://localhost:3000
        NEXT_PUBLIC_API_URL: http://localhost:5000

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    
    - name: Run security audit
      run: npm audit --production
      continue-on-error: true
    
    - name: Check for vulnerabilities
      run: npm audit --audit-level=high

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Deploy to Vercel Preview
      uses: amondnet/vercel-action@v20
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        scope: ${{ secrets.VERCEL_ORG_ID }}
